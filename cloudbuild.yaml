steps:
  # [Create build trigger for the creation of the bucket to store logs]
  - id: 'create trigger for build logs bucket'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        export PROJECT_ID=$PROJECT_ID
        source buckets/trigger.sh
  # [Run Log Bucket trigger]
  - id: 'run build logs trigger'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        buckets=$(gsutil ls -p $PROJECT_ID | grep ${REPO_NAME}-build-logs-${PROJECT_ID})
        if [ -z "$buckets" ]; then
        gcloud beta builds triggers run --branch=$BRANCH_NAME build-log-bucket-trigger
        else
        echo "Phase 1 has already been completed, trigger does not require manual invocation"
        fi
  # [wait for log bucket creation]
  - id: 'wait for log bucket creation'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        buckets=$(gsutil ls -p $PROJECT_ID | grep ${REPO_NAME}-build-logs-${PROJECT_ID})
        while [ -z "$buckets" ]
        do
        buckets=$(gsutil ls -p $PROJECT_ID | grep ${REPO_NAME}-build-logs-${PROJECT_ID})
        sleep 10
        done
   # [Create build trigger for the creation of the VPC network]
  - id: 'create trigger for vpc network'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        export PROJECT_ID=$PROJECT_ID
        source vpc/trigger.sh
  # [Run VPC Network trigger]
  - id: 'run vpc network trigger'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        vpc=$(gcloud compute networks list --project=$PROJECT_ID | grep iac-orchestration-vpc)
        if [ -z "$vpc" ]; then
        gcloud beta builds triggers run --branch=$BRANCH_NAME build-vpc-trigger
        else
        echo "Phase 1 has already been completed, trigger does not require manual invocation"
        fi
  # [wait for VPC network creation]
  - id: 'wait for VPC network creation'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        vpc=$(gcloud compute networks list --project=$PROJECT_ID | grep iac-orchestration-vpc)
        while [ -z "$vpc" ]
        do
        vpc=$(gcloud compute networks list --project=$PROJECT_ID | grep iac-orchestration-vpc)
        sleep 10
        done
  # [create trigger for GKE]
  - id: 'create trigger for gke network'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        export PROJECT_ID=$PROJECT_ID
        source gke/trigger.sh
  # [Run GKE trigger]
  - id: 'run gke network trigger'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:latest'
    entrypoint: '/bin/bash'
    args:
      - '-c'
      - |
        gke=$(gcloud container clusters list --project=$PROJECT_ID | grep tekton)
        if [ -z "$gke" ]; then
        gcloud beta builds triggers run --branch=$BRANCH_NAME build-gke-trigger
        else
        echo "Phase 1 has already been completed, trigger does not require manual invocation"
        fi
